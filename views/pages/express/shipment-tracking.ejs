<!DOCTYPE html>
<html lang="hi">

<head>
    <%- include('../../partials/head') %>
    <style>
  /* Base styles */
  .tracking-container {
    max-width: 100%;
    margin: 0 auto;
  }
  
  /* Responsive container adjustments */
  @media (min-width: 768px) {
    .tracking-container {
      max-width: 800px;
    }
  }
  
  /* Fix for left column spacing - Product Box Details */
  .col-md-5.col-xl-4.col-lg-5 {
    padding-left: 2rem;
    padding-right: 1rem;
  }
  
  @media (max-width: 767px) {
    .col-md-5.col-xl-4.col-lg-5 {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }
  
  /* Fix for right column spacing - Main Content */
  .col-md-7.col-xl-8.col-lg-7 {
    padding-left: 1rem;
    padding-right: 2rem;
  }
  
  @media (max-width: 767px) {
    .col-md-7.col-xl-8.col-lg-7 {
      padding-left: 1rem;
      padding-right: 1rem;
    }
  }
  
  /* Better centering for auth-bg content */
  .auth-bg {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
  }
  
  .auth-bg .accountbg {
    width: 100%;
    max-width: 100%;
    margin: 0 auto;
  }
  
  .auth-bg .account-title {
    width: 100%;
    max-width: 100%;
    padding: 2rem 1rem;
  }
  
  @media (min-width: 768px) {
    .auth-bg .account-title {
      padding: 2rem;
    }
  }
  
  /* Product box details better spacing */
  .product-box-details {
    display: none; /* Initially hidden */
    margin-bottom: 2rem;
    padding: 0 0.5rem;
  }
  
  @media (min-width: 768px) {
    .product-box-details {
      padding: 0;
      margin-bottom: 2.5rem;
    }
  }
  
  /* Better responsive grid balance */
  @media (min-width: 1200px) {
    .col-md-5.col-xl-4.col-lg-5 {
      flex: 0 0 35%;
      max-width: 35%;
      padding-left: 3rem;
    }
    
    .col-md-7.col-xl-8.col-lg-7 {
      flex: 0 0 65%;
      max-width: 65%;
      padding-right: 3rem;
    }
  }
  
  /* Tracking form styles with responsive adjustments */
  .tracking-form {
    background-color: #fff;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    margin-bottom: 2rem;
    margin-left: auto;
    margin-right: auto;
    max-width: 100%;
    border: 1px solid rgba(0,0,0,0.05);
  }
  
  @media (min-width: 768px) {
    .tracking-form {
      padding: 2.5rem;
      margin-bottom: 2.5rem;
    }
  }
  
  /* Tracking result container with responsive padding */
  .tracking-result {
    background-color: #fff;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    overflow-x: hidden;
    width: 100%;
    margin: 0 auto;
    border: 1px solid rgba(0,0,0,0.05);
  }
  
  @media (min-width: 768px) {
    .tracking-result {
      padding: 2.5rem;
      max-width: 95%;
    }
  }
  
  /* Responsive logo sizing */
  .logo-container img {
    max-width: 100%;
    height: auto;
  }
  
  /* Responsive grid for shipment details */
  .shipment-details .col-md-3 {
    margin-bottom: 1.5rem;
  }
  
  /* Responsive timeline */
  .tracking-step {
    position: relative;
    padding-left: 30px;
    margin-bottom: 1.5rem;
  }
  
  .tracking-step:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #3b7ddd;
  }
  
  .tracking-step:after {
    content: "";
    position: absolute;
    left: 10px;
    top: 20px;
    width: 2px;
    height: calc(100% + 10px);
    background-color: #e0e0e0;
  }
  
  .tracking-step:last-child:after {
    display: none;
  }
  
  .tracking-step.completed:before {
    background-color: #28a745;
  }
  
  .tracking-step.current:before {
    background-color: #ffc107;
  }
  
  .tracking-step.pending:before {
    background-color: #e0e0e0;
  }
  
  /* Horizontal timeline styles with better mobile support */
.horizontal-timeline {
  width: 100%;
  overflow-x: hidden;
  margin-bottom: 2rem;
}

#rightSideTrackingTimeline {
  position: relative;
  display: flex;
  flex-wrap: nowrap;
  overflow-x: auto;
  padding-bottom: 20px;
  margin-bottom: 20px;
  -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
  scrollbar-width: thin; /* Firefox */
  gap: 15px; /* Increased spacing */
}

#rightSideTrackingTimeline::-webkit-scrollbar {
  height: 6px;
}

#rightSideTrackingTimeline::-webkit-scrollbar-thumb {
  background-color: rgba(0,0,0,0.2);
  border-radius: 3px;
}

#rightSideTrackingTimeline::after {
  content: '';
  position: absolute;
  top: 20px;
  left: 0;
  right: 0;
  height: 2px;
  background-color: #e0e0e0;
  z-index: 0;
}

.timeline-item {
  position: relative;
  min-width: 100px; /* Reduced from 120px */
  max-width: 120px; /* Add max-width to prevent expansion */
  padding: 0 5px; /* Reduced padding */
  z-index: 1;
  flex: 0 0 auto;
  text-align: center;
}

@media (min-width: 480px) {
  .timeline-item {
    min-width: 110px;
    max-width: 130px;
    padding: 0 8px;
  }
}

@media (min-width: 768px) {
  .timeline-item {
    min-width: 120px;
    max-width: 150px;
    padding: 0 10px;
  }
}

@media (min-width: 992px) {
  .timeline-item {
    min-width: 140px;
    max-width: 170px;
    padding: 0 15px;
  }
}

/* Updated timeline-item-dot to support icons with better sizing */
.timeline-item-dot {
  width: 35px; /* Reduced from 40px */
  height: 35px;
  border-radius: 50%;
  background-color: #e0e0e0;
  margin: 0 auto 8px; /* Reduced margin */
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #fff;
  font-size: 14px; /* Reduced from 16px */
}

@media (min-width: 768px) {
  .timeline-item-dot {
    width: 40px;
    height: 40px;
    font-size: 16px;
    margin-bottom: 10px;
  }
}

.timeline-item.completed .timeline-item-dot {
  background-color: #28a745;
}
.timeline-item.pending .timeline-item-dot {
  background-color: #e0e0e0;
  color: #666;
}

.timeline-item.current .timeline-item-dot {
  background-color: #ffc107;
  color: #333;
}
  
  .timeline-item-date {
    font-size: 0.7rem; /* Reduced from 0.8rem */
    color: #6c757d;
    text-align: center;
    line-height: 1.2;
  }
  
  @media (min-width: 768px) {
    .timeline-item-date {
      font-size: 0.8rem;
    }
  }
  
  .timeline-item-title {
    font-weight: bold;
    margin-bottom: 0.2rem;
    text-align: center;
    font-size: 0.75rem; /* Reduced from 0.9rem */
    word-break: break-word;
    line-height: 1.2;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }
  
  @media (min-width: 768px) {
    .timeline-item-title {
      font-size: 0.85rem;
      -webkit-line-clamp: 3;
    }
  }
  
  @media (min-width: 992px) {
    .timeline-item-title {
      font-size: 0.9rem;
    }
  }
  
  /* Right side tracking result styles */
  #rightSideTrackingResult {
    color: #333;
    background-color: rgba(255, 255, 255, 0.95);
    border-radius: 12px;
  }
  
  /* Tracking history in responsive layout */
  .tracking-history-list {
    display: flex;
    flex-direction: column;
    max-height: 300px;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    margin-top: 1rem;
  }
  
  .tracking-history-item {
    display: flex;
    flex-direction: column;
    padding: 1rem;
    border-bottom: 1px solid #eee;
    margin-bottom: 0.5rem;
    border-radius: 8px;
    background-color: rgba(248, 249, 250, 0.5);
  }
  
  @media (min-width: 768px) {
    .tracking-history-item {
      flex-direction: row;
      flex-wrap: wrap;
      padding: 1.25rem;
    }
    
    .tracking-history-date {
      flex: 0 0 180px;
    }
    
    .tracking-history-status {
      flex: 0 0 150px;
    }
    
    .tracking-history-location {
      flex: 1;
    }
  }
  
  .tracking-history-date {
    font-size: 0.8rem;
    color: #6c757d;
    margin-bottom: 5px;
  }
  
  .tracking-history-status {
    font-weight: bold;
    margin-bottom: 5px;
  }
  
  .tracking-history-location {
    font-size: 0.9rem;
    margin-bottom: 5px;
  }
  
  .tracking-history-details {
    font-size: 0.85rem;
    color: #6c757d;
  }
  
  /* Responsive layout for the main container */
  .auth-page .container-fluid {
    padding: 0;
  }
  
  /* Responsive height adjustments */
  @media (max-width: 767px) {
    .vh-100 {
      height: auto !important;
      min-height: 100vh;
    }
    
    .auth-bg {
      min-height: 500px;
    }
  }
  
  /* Responsive adjustments for the two-column layout */
  @media (max-width: 767px) {
    .row.d-flex.align-items-center {
      flex-direction: column;
    }
    
    .col-md-5, .col-md-7 {
      width: 100%;
      max-width: 100%;
      flex: 0 0 100%;
    }
    
    .accountbg {
      padding: 1rem;
    }
    
    .account-title {
      padding: 1rem !important;
    }
  }
  
  /* Current status responsive layout */
  .current-status .row {
    flex-direction: column;
  }
  
  @media (min-width: 768px) {
    .current-status .row {
      flex-direction: row;
    }
  }
  
  .current-status .col-md-4 {
    margin-bottom: 0.5rem;
  }

  
  @media (min-width: 768px) {
    .current-status .col-md-4 {
      margin-bottom: 0;
    }
  }
  
  /* Logo responsive sizing */
  .logo-container img {
    width: 40%;
    max-width: 150px;
  }
  
  @media (min-width: 768px) {
    .logo-container img {
      width: 20%;
    }
  }
  
  /* Ensure timeline container doesn't overflow */
  .horizontal-timeline {
    overflow: hidden;
  }
  
  /* Add scroll indicators for better UX */
  .horizontal-timeline::before {
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    width: 20px;
    background: linear-gradient(to left, rgba(255,255,255,0.8), transparent);
    pointer-events: none;
    z-index: 2;
  }
  
  @media (max-width: 767px) {
    .horizontal-timeline::after {
      content: 'Scroll â†’';
      position: absolute;
      right: 5px;
      bottom: 0;
      font-size: 0.7rem;
      color: #6c757d;
      background: rgba(255,255,255,0.9);
      padding: 2px 5px;
      border-radius: 3px;
      z-index: 3;
    }
  }

  .tracking-section {
    margin-bottom: 3rem;
  }

  .product-details-section {
    margin-bottom: 2rem;
  }

  .box-details-section {
    margin-bottom: 2rem;
  }

  .tracking-form-section {
    margin-bottom: 2rem;
  }

  .tracking-result-section {
    margin-bottom: 2rem;
  }

  .timeline-section {
    margin-bottom: 2.5rem;
  }

  .history-section {
    margin-bottom: 2rem;
  }

  /* Enhanced card styling */
  .enhanced-card {
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    border: 1px solid rgba(0,0,0,0.05);
    overflow: hidden;
  }

  .enhanced-card .card-header {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-bottom: 1px solid rgba(0,0,0,0.05);
    padding: 1.25rem 1.5rem;
  }

  .enhanced-card .card-body {
    padding: 1.5rem;
  }

  /* Enhanced form styling */
  .enhanced-form {
    background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.08);
    border: 1px solid rgba(0,0,0,0.05);
    padding: 2rem;
  }

  .enhanced-form .form-label {
    font-weight: 600;
    color: #495057;
    margin-bottom: 0.75rem;
  }

  .enhanced-form .form-control {
    border-radius: 8px;
    border: 2px solid #e9ecef;
    padding: 0.75rem 1rem;
    transition: all 0.3s ease;
  }

  .enhanced-form .form-control:focus {
    border-color: #3b7ddd;
    box-shadow: 0 0 0 0.2rem rgba(59, 125, 221, 0.25);
  }

  .enhanced-form .btn {
    border-radius: 8px;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  /* Enhanced status badge */
  .enhanced-status-badge {
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.875rem;
  }

  /* Enhanced shipment details */
  .enhanced-shipment-details {
    background: rgba(248, 249, 250, 0.5);
    border-radius: 8px;
    padding: 1.5rem;
    margin-bottom: 2rem;
  }

  .enhanced-shipment-details .col-md-3 {
    margin-bottom: 1rem;
  }

  .enhanced-shipment-details small {
    font-weight: 600;
    color: #6c757d;
    text-transform: uppercase;
    font-size: 0.75rem;
    letter-spacing: 0.5px;
  }

  .enhanced-shipment-details p {
    margin-bottom: 0;
    font-weight: 500;
    color: #495057;
  }

  /* Enhanced current status */
  .enhanced-current-status {
    background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 2rem;
    border: 1px solid rgba(33, 150, 243, 0.1);
  }

  /* Enhanced timeline */
  .enhanced-timeline {
    background: rgba(255, 255, 255, 0.8);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 2rem;
  }

  /* Enhanced history */
  .enhanced-history {
    background: rgba(255, 255, 255, 0.8);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 2rem;
  }

  /* Section headers */
  .section-header {
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid rgba(59, 125, 221, 0.1);
  }

  .section-header h5, .section-header h6 {
    margin-bottom: 0;
    color: #495057;
    font-weight: 600;
  }

  /* Loading animation improvements */
  .enhanced-loading {
    padding: 3rem 2rem;
    text-align: center;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-radius: 12px;
  }

  /* Responsive improvements */
  @media (max-width: 767px) {
    .enhanced-form {
      padding: 1.5rem;
    }
    
    .enhanced-card .card-body {
      padding: 1rem;
    }
    
    .enhanced-shipment-details {
      padding: 1rem;
    }
    
    .enhanced-current-status {
      padding: 1rem;
    }
    
    .enhanced-timeline,
    .enhanced-history {
      padding: 1rem;
    }
  }
</style>
</head>

<body data-theme="light" class="font-nunito">
    <div id="wrapper" class="theme-cyan">

        <!-- HEADER -->
        <%- include('../../partials/header') %>

            <!-- SIDEBAR -->
            <%- include('../../partials/left-sidebar') %>
                <%- include('../../partials/right-iconbar') %>

                    <!-- MAIN CONTENT -->
                    <div id="main-content">
                        <div class="container-fluid">
                            <!-- Page Header -->
                            <div class="block-header">
                                <div class="row">
                                    <div class="col-lg-6 col-md-6 col-sm-12">
                                        <h2>Shipment Tracking</h2>
                                        <ul class="breadcrumb">
                                            <li class="breadcrumb-item">
                                                <a href="/index"><i class="fa fa-dashboard"></i></a>
                                            </li>
                                            <li class="breadcrumb-item active">shipment tracking</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>

                            <!-- MAIN BODY CONTENT -->
                            <div class="main-content-wrapper">
                                <div class="container">
                                    <div class="row vh-100">
                                        <div class="col-12">
                                            <div class="card-body p-0">
                                                <div class="row d-flex align-items-center">
                                                    <!-- Left Column - Tracking Form and Details -->
                                                    <div class="col-md-5 col-xl-4">
                                                        <!-- Product and Box Details Sections -->
                                                        <div class="product-box-details product-details-section">
                                                            <div class="row">
                                                                <div class="col-12 mb-3">
                                                                    <div class="card enhanced-card" style="background: linear-gradient(360deg, #f8f4f1, #ffffff, #e7d9ce);">
                                                                        <div class="card-header" style="background-color: #e0dcdc;">
                                                                            <h6 class="mb-0">Product Details</h6>
                                                                        </div>
                                                                        <div class="card-body p-3">
                                                                            <div id="productDetailsList" class="list-group list-group-flush">
                                                                                <!-- Product details will be populated here -->
                                                                                <div class="enhanced-loading">
                                                                                    <div class="spinner-border" style="color: #3b7ddd; width: 3rem; height: 3rem;" role="status">
                                                                                        <span class="visually-hidden">Loading...</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-12">
                                                                    <div class="card enhanced-card" style="background: linear-gradient(360deg, #f8f4f1, #ffffff, #e7d9ce);">
                                                                        <div class="card-header" style="background-color: #e0dcdc;">
                                                                            <h6 class="mb-0">Box Details</h6>
                                                                        </div>
                                                                        <div class="card-body p-3">
                                                                            <div id="boxDetailsList" class="list-group list-group-flush">
                                                                                <!-- Box details will be populated here -->
                                                                                <div class="enhanced-loading">
                                                                                    <div class="spinner-border" style="color: #3b7ddd; width: 3rem; height: 3rem;" role="status">
                                                                                        <span class="visually-hidden">Loading...</span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <!-- Tracking Form Section -->
                                                        <div class="tracking-form-section">
                                                            <div class="card mb-0 border-0 position-relative enhanced-card">
                                                                <div class="card-body p-0">
                                                                    <div class="text-center p-4">
                                                                        <h4 class="mt-3 mb-2 fw-semibold font-18">Track Your Order</h4>   
                                                                        <p class="text-muted mb-0">Enter your tracking number to get real-time updates</p>  
                                                                    </div>
                                                                </div>
                                                                <div class="card-body">
                                                                    <div class="enhanced-form">
                                                                        <form id="trackingForm">
                                                                            <div class="mb-4">
                                                                                <label for="trackingNumber" class="form-label">Tracking/AWB Number</label>
                                                                                <div class="input-group">
                                                                                    <input type="text" class="form-control" id="trackingNumber" placeholder="Enter tracking number" required>
                                                                                    <button class="btn btn-primary" type="button" id="trackButton">Track</button>
                                                                                </div>
                                                                                <div class="form-text mt-2">Example: 123321344, 74160902312134</div>
                                                                            </div>
                                                                        </form>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <!-- Right Column - Tracking Results -->
                                                    <div class="col-md-7 col-xl-8 col-lg-7 p-0 vh-100 d-flex justify-content-center auth-bg" style="background-color: #1d86ff24;">
                                                        <div class="accountbg d-flex align-items-center"> 
                                                            <div class="account-title text-white w-100 p-4">
                                                                <!-- Updated headline and layout -->
                                                                <div class="text-center mb-5">
                                                                    <h2 class="text-white mb-2">Shipment Tracking Details</h2>
                                                                    <p class="text-white-50 mb-0">Real-time updates for your package</p>
                                                                </div>
                                                                
                                                                <div id="rightSideTrackingResult" class="d-none tracking-result">
                                                                    <!-- Logo Section -->
                                                                    <div class="d-flex justify-content-between align-items-center mb-4 logo-container">
                                                                        <img src="assets/images/logo-dark.png" alt="dispatchphoto" class="img-fluid">
                                                                        <img src="" alt="courierphoto" class="img-fluid" id="courierPartner">
                                                                    </div>

                                                                    <!-- Status Badge Section -->
                                                                    <div class="d-flex justify-content-between align-items-center mb-4">
                                                                        <h5 class="mb-0">Shipment Status</h5>
                                                                        <span class="badge enhanced-status-badge bg-primary" id="rightSideStatusBadge">In Transit</span>
                                                                    </div>
                                                                    
                                                                    <!-- Shipment Details Section -->
                                                                    <div class="enhanced-shipment-details">
                                                                        <div class="row shipment-details">
                                                                            <div class="col-6 col-md-3">
                                                                                <small class="text-muted">AWB Number</small>
                                                                                <p class="mb-0 fw-bold" id="rightSideAwbDisplay"></p>
                                                                            </div>
                                                                            <div class="col-6 col-md-3">
                                                                                <small class="text-muted">Po-ID</small>
                                                                                <p class="mb-0" id="po"></p>
                                                                            </div>
                                                                            <div class="col-6 col-md-3">
                                                                                <small class="text-muted">Order Date</small>
                                                                                <p class="mb-0 fw-bold" id="rightSideOrderDateDisplay"></p>
                                                                            </div>
                                                                            <div class="col-6 col-md-3">
                                                                                <small class="text-muted">Origin</small>
                                                                                <p class="mb-0" id="rightSideConsigneeDisplay"></p>
                                                                            </div>
                                                                            <div class="col-6 col-md-3">
                                                                                <small class="text-muted">Destination</small>
                                                                                <p class="mb-0" id="rightSideDestinationDisplay"></p>
                                                                            </div>
                                                                            <div class="col-6 col-md-3">
                                                                                <small class="text-muted">Courier</small>
                                                                                <p class="mb-0" id="courier"></p>
                                                                            </div>
                                                                            <div class="col-6 col-md-3">
                                                                                <small class="text-muted">Service Type</small>
                                                                                <p class="mb-0" id="service"></p>
                                                                            </div>
                                                                            <div class="col-6 col-md-3">
                                                                                <small class="text-muted">MODE</small>
                                                                                <p class="mb-0" id="mode"></p>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    
                                                                    <!-- Current Status Section -->
                                                                    <div class="enhanced-current-status">
                                                                        <div class="section-header">
                                                                            <h5 class="mb-0">Current Status</h5>
                                                                        </div>
                                                                        <div class="row align-items-center">
                                                                            <div class="col-12 col-md-4 mb-2 mb-md-0">
                                                                                <strong id="rightSideCurrentStatusText">In Transit</strong>
                                                                            </div>
                                                                            <div class="col-12 col-md-4 mb-2 mb-md-0">
                                                                                Location: <span id="rightSideCurrentLocation">Noida_Bairangpur_GW (Uttar Pradesh)</span>
                                                                            </div>
                                                                            <div class="col-12 col-md-4 text-md-end">
                                                                                Last Updated: <span id="rightSideLastUpdated">Apr 18, 2025, 11:33 AM</span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    
                                                                    <!-- Timeline Section -->
                                                                    <div class="enhanced-timeline">
                                                                        <div class="section-header">
                                                                            <h6 class="mb-0">Tracking Timeline</h6>
                                                                        </div>
                                                                        <div id="rightSideTrackingTimeline" class="d-flex overflow-auto pb-2">
                                                                            <!-- Timeline will be populated by JavaScript -->
                                                                        </div>
                                                                    </div>
                                                                    
                                                                    <!-- Tracking History Section -->
                                                                    <div class="enhanced-history">
                                                                        <div class="section-header">
                                                                            <h6 class="mb-0">Tracking History</h6>
                                                                        </div>
                                                                        <div id="rightSideTrackingHistory" class="tracking-history-list">
                                                                            <!-- Full tracking history will be populated by JavaScript -->
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <script>
  document.addEventListener("DOMContentLoaded", function() {
    // Get elements for left side form
    const trackingInput = document.getElementById('trackingNumber');
    const trackingResult = document.getElementById('trackingResult');
    const trackButton = document.getElementById('trackButton');
    
    // Get elements for right side display
    let rightSideTrackingResult = document.getElementById('rightSideTrackingResult');
    
    // Check if AWB number was passed from the server
    const initialAwbNumber = '<%= typeof awbNumber !== "undefined" ? awbNumber : "" %>';
    window.originalTrackingResultHTML = rightSideTrackingResult.innerHTML;
  
  // Function to restore the original structure
  const restoreOriginalStructure = () => {
    if (rightSideTrackingResult.querySelector('.alert')) {
      rightSideTrackingResult.innerHTML = window.originalTrackingResultHTML;
    }
  };
  // Function to show/hide loading state
  const setLoading = (isLoading) => {
    // Handle button state
    trackButton.disabled = isLoading;
    trackButton.innerHTML = isLoading ? 
      '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Tracking...' : 
      'Track';
    
    // Remove any existing loading overlays
    const existingOverlay = document.getElementById('tracking-loading-overlay');
    if (existingOverlay) {
      existingOverlay.remove();
    }
    
    // Add new overlay if loading
    if (isLoading) {
      const loadingOverlay = document.createElement('div');
      loadingOverlay.id = 'tracking-loading-overlay';
      loadingOverlay.style.position = 'absolute';
      loadingOverlay.style.top = '0';
      loadingOverlay.style.left = '0';
      loadingOverlay.style.width = '100%';
      loadingOverlay.style.height = '100%';
      loadingOverlay.style.backgroundColor = 'rgba(255, 255, 255, 0.8)';
      loadingOverlay.style.display = 'flex';
      loadingOverlay.style.justifyContent = 'center';
      loadingOverlay.style.alignItems = 'center';
      loadingOverlay.style.zIndex = '1000';
      loadingOverlay.innerHTML = `
        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">Loading...</span>
        </div>
      `;
      
      rightSideTrackingResult.style.position = 'relative';
      rightSideTrackingResult.appendChild(loadingOverlay);
    }
  };
    // If AWB number exists, set it in the input field and trigger tracking
    if (initialAwbNumber) {
      trackingInput.value = initialAwbNumber;
      // Automatically track the shipment when page loads with AWB
      setTimeout(() => {
        trackShipment(initialAwbNumber);
      }, 500);
    }
    
    // Format dates for better display
    const formatDate = (dateString) => {
      try {
        const date = new Date(dateString);
        if (isNaN(date.getTime())) {
          return dateString;
        }
        return date.toLocaleString('en-US', {
          year: 'numeric',
          month: 'short',
          day: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        });
      } catch (e) {
        return dateString;
      }
    };
    
    // Format short date (for timeline)
    const formatShortDate = (dateString) => {
      try {
        const date = new Date(dateString);
        if (isNaN(date.getTime())) {
          return dateString;
        }
        return date.toLocaleString('en-US', {
          month: 'short',
          day: 'numeric'
        });
      } catch (e) {
        return dateString;
      }
    };
    
       // Get status text, badge color and icon
       const getStatusInfo = (status) => {
      let statusText = '';
      let statusClass = '';
      let statusIcon = '';
      
      if (typeof status === 'number') {
        switch(status) {
          case 1:
            statusText = 'Pending';
            statusClass = 'bg-warning';
            statusIcon = '<i class="fas fa-clock"></i>';
            break;
          case 2:
            statusText = 'Shipped';
            statusClass = 'bg-info';
            statusIcon = '<i class="fas fa-shipping-fast"></i>';
            break;
          case 3:
            statusText = 'In Transit';
            statusClass = 'bg-primary';
            statusIcon = '<i class="fas fa-truck"></i>';
            break;
          case 4:
            statusText = 'Out for Delivery';
            statusClass = 'bg-info';
            statusIcon = '<i class="fas fa-truck-loading"></i>';
            break;
          case 5:
            statusText = 'Delivered';
            statusClass = 'bg-success';
            statusIcon = '<i class="fas fa-check-circle"></i>';
            break;
          case 6:
            statusText = 'Failed Delivery';
            statusClass = 'bg-danger';
            statusIcon = '<i class="fas fa-times-circle"></i>';
            break;
          case 7:
            statusText = 'Returned';
            statusClass = 'bg-secondary';
            statusIcon = '<i class="fas fa-undo"></i>';
            break;
          default:
            statusText = 'Unknown';
            statusClass = 'bg-secondary';
            statusIcon = '<i class="fas fa-question-circle"></i>';
        }
      } else {
        statusText = status;
        if (statusText.toLowerCase().includes('delivered')) {
          statusClass = 'bg-success';
          statusIcon = '<i class="fas fa-check-circle"></i>';
        } else if (statusText.toLowerCase().includes('transit')) {
          statusClass = 'bg-primary';
          statusIcon = '<i class="fas fa-truck"></i>';
        } else if (statusText.toLowerCase().includes('manifested')) {
          statusClass = 'bg-warning';
          statusIcon = '<i class="fa-solid fa-download"></i>';
        } else if (statusText.toLowerCase().includes('pending')) {
          statusClass = 'bg-warning';
          statusIcon = '<i class="fas fa-clock"></i>';
        } else if (statusText.toLowerCase().includes('failed') || statusText.toLowerCase().includes('return')) {
          statusClass = 'bg-danger';
          statusIcon = '<i class="fas fa-times-circle"></i>';
        } else if (statusText.toLowerCase().includes('shipped')) {
          statusClass = 'bg-info';
          statusIcon = '<i class="fas fa-shipping-fast"></i>';
        } else if (statusText.toLowerCase().includes('out for delivery')) {
          statusClass = 'bg-info';
          statusIcon = '<i class="fas fa-truck-loading"></i>';
        } else {
          statusClass = 'bg-secondary';
          statusIcon = '<i class="fas fa-question-circle"></i>';
        }
      }
      
      return { statusText, statusClass, statusIcon };
    };
    // [Rest of the code remains the same until the timeline generation part]
    
    // Handle tracking
    const trackShipment = async (trackingNumber) => {
      if (!trackingNumber) {
        rightSideTrackingResult.classList.remove('d-none');
        rightSideTrackingResult.innerHTML = `
          <div class="alert alert-warning">
            Please enter a tracking number
          </div>
        `;
        return;
      }
      
      try {
      restoreOriginalStructure();
      
      // Show loading state
      setLoading(true);
      
      // Make sure the result container is visible
      rightSideTrackingResult.classList.remove('d-none');

      const response = await axios.get('/api/track-shipment', {
        params: { trackingNumber }
      });
     // Remove the loading indicator
      // Remove the loading overlay
      const overlay = document.getElementById('tracking-loading-overlay');
      if (overlay) {
        rightSideTrackingResult.removeChild(overlay);
      }

// ... existing code ...
if (response.data.success) {
        const shipmentData = response.data.shipmentDetails || {};
        const currentStatus = response.data.currentStatus || {};
        const timeline = response.data.timeline || [];
        const productDetails = response.data.productDetails || [];
        const boxDetails = response.data.boxDetails || [];
        document.querySelector('.product-box-details').style.display = 'block';
        
        const { statusText, statusClass } = getStatusInfo(currentStatus.status || shipmentData.status);
        
        // Safely update DOM elements with null checks
        const updateElement = (id, property, value) => {
          const element = document.getElementById(id);
          if (element) {
            element[property] = value;
          } else {
            console.warn(`Element with id ${id} not found`);
          }
        };
        
        updateElement('rightSideStatusBadge', 'textContent', currentStatus.status || statusText);
        updateElement('rightSideStatusBadge', 'className', `badge ${statusClass}`);
        updateElement('rightSideAwbDisplay', 'textContent', shipmentData.trackingNumber || '');
        updateElement('rightSideOrderDateDisplay', 'textContent', formatDate(shipmentData.orderDate) || '');
        
        if (shipmentData.originCity) {
          updateElement('rightSideConsigneeDisplay', 'textContent', 
            `${shipmentData.originCity}, ${shipmentData.originState}, ${shipmentData.originPincode}`);
        } else {
          updateElement('rightSideConsigneeDisplay', 'textContent', '');
        }
        
        if (shipmentData.destinationCity) {
          updateElement('rightSideDestinationDisplay', 'textContent', 
            `${shipmentData.destinationCity}, ${shipmentData.destinationState}, ${shipmentData.destinationPincode}`);
        } else {
          updateElement('rightSideDestinationDisplay', 'textContent', '');
        }
        
        const fullCourierInfo = shipmentData.courier;

        if (fullCourierInfo) {
            const parts = fullCourierInfo.split('/');
            const courierNamePart = parts[0] || '';
            
            if (parts.length > 1) {
                const serviceModeParts = parts[1].split('-');
                const serviceType = serviceModeParts[0] || '';
                const mode = serviceModeParts.length > 1 ? serviceModeParts[1] : '';
                
                document.getElementById('service').textContent = serviceType;
                document.getElementById('mode').textContent = mode;
            }
            
            document.getElementById('courier').textContent = courierNamePart;
            
            const courierImg = document.getElementById('courierPartner');
            const courierName = courierNamePart.toLowerCase();
            
            if (courierName.includes('delhivery')) {
                courierImg.src = 'assets/images/logos/delhivery.png';
            } else if (courierName.includes('express') || courierName.includes('expressbees')) {
                courierImg.src = 'assets/images/logos/expressbees.png';
            } else if (courierName.includes('dtdc')) {
                courierImg.src = 'assets/images/logos/dtdc.png';
            } else if (courierName.includes('bluedart')) {
                courierImg.src = 'assets/images/BlueDart.png';
            } else if (courierName.includes('fedex')) {
                courierImg.src = 'assets/images/FedEx.png';
            } else {
                courierImg.src = 'assets/images/logos/logo-dark.png';
            }
        }
        
        updateElement('po', 'textContent', shipmentData.po || '');
        updateElement('rightSideCurrentStatusText', 'textContent', currentStatus.status || '');
        updateElement('rightSideCurrentLocation', 'textContent', currentStatus.location || '');
        updateElement('rightSideLastUpdated', 'textContent', formatDate(currentStatus.lastUpdated) || '');
        
        // Populate Product Details
        const productDetailsList = document.getElementById('productDetailsList');
        if (productDetailsList) {
          productDetailsList.innerHTML = '';
          
          if (productDetails && productDetails.length > 0) {
            productDetails.forEach(product => {
              const productItem = document.createElement('div');
              productItem.className = 'list-group-item px-0 py-2 border-0';
              productItem.innerHTML = `
                <div class="d-flex justify-content-between align-items-center">
                  <div>
                    <h6 class="mb-1">${product.product_name || 'N/A'}</h6>
                    <small class="text-muted">Category: ${product.category || 'N/A'}</small>
                  </div>
                  <div class="text-end">
                    <span class="badge bg-primary rounded-pill">${product.quantity || 0} Qty</span>
                    <div><small class="text-muted">â‚¹${parseFloat(product.order_value || 0).toFixed(2)}</small></div>
                  </div>
                </div>
              `;
              productDetailsList.appendChild(productItem);
            });
          } else {
            productDetailsList.innerHTML = '<div class="list-group-item px-0 py-2 border-0 text-center">No product details available</div>';
          }
        }
        
        // Populate Box Details
        const boxDetailsList = document.getElementById('boxDetailsList');
        if (boxDetailsList) {
          boxDetailsList.innerHTML = '';
          
          if (boxDetails && boxDetails.length > 0) {
            boxDetails.forEach(box => {
              const boxItem = document.createElement('div');
              boxItem.className = 'list-group-item px-0 py-2 border-0';
              boxItem.innerHTML = `
                <div>
                  <h6 class="mb-1">Box ${box.boxes || '1'} of ${shipmentData.boxes || '1'}</h6>
                  <div class="d-flex justify-content-between">
                    <small class="text-muted">Dimensions: ${box.DIMENSION || 'N/A'} ${box.unit || ''}</small>
                    <small class="text-muted">Weight: ${shipmentData.weight || 'N/A'} ${shipmentData.weightUnit || ''}</small>
                  </div>
                </div>
              `;
              boxDetailsList.appendChild(boxItem);
            });
          } else {
            boxDetailsList.innerHTML = '<div class="list-group-item px-0 py-2 border-0 text-center">No box details available</div>';
          }
        }
        
        const timelineContainer = document.getElementById('rightSideTrackingTimeline');
        timelineContainer.innerHTML = '';
// ... existing code ...
          
          if (timeline && timeline.length) {
            const uniqueStatuses = [];
            const statusMap = {};
            
            timeline.forEach(event => {
              const status = event.status.toLowerCase();
              // Combine pickup related statuses into "Shipped Order"
              if (status.includes('out for pickup') || status.includes('pickup done') || status.includes('picked')) {
                if (!statusMap['shipped']) {
                  statusMap['shipped'] = true;
                  uniqueStatuses.push({...event, status: 'Shipped'});
                }
              } else if (!statusMap[status]) {
                statusMap[status] = true;
                uniqueStatuses.push(event);
              }
            });
            
            uniqueStatuses.sort((a, b) => new Date(a.date) - new Date(b.date));
            
            uniqueStatuses.forEach((event, index) => {
              let itemClass = 'pending';
              if (index === uniqueStatuses.length - 1) {
                itemClass = 'current';
              } else {
                itemClass = 'completed';
              }
              // Get icon based on status
           let statusIcon = getStatusIcon(event.status);
              
              const timelineItem = document.createElement('div');
              timelineItem.className = `timeline-item ${itemClass}`;
              timelineItem.innerHTML = `
                <div class="timeline-item-dot">${statusIcon}</div>
                <div class="timeline-item-title">${event.status}</div>
                <div class="timeline-item-date">${formatShortDate(event.date)}</div>
              `;
              
              timelineContainer.appendChild(timelineItem);
            });
          }
          
          const historyContainer = document.getElementById('rightSideTrackingHistory');
        if (historyContainer) {
          historyContainer.innerHTML = '';
          
          if (timeline && timeline.length) {
            timeline.forEach(event => {
              const historyItem = document.createElement('div');
              historyItem.className = 'tracking-history-item';
              historyItem.innerHTML = `
                <div class="tracking-history-date">${formatDate(event.date)}</div>
                <div class="tracking-history-status">${event.status}</div>
                <div class="tracking-history-location">Location: ${event.location || 'N/A'}</div>
                ${event.details ? `<div class="tracking-history-details">${event.details}</div>` : ''}
              `;
              
              historyContainer.appendChild(historyItem);
            });
          } else {
            historyContainer.innerHTML = '<div class="text-center text-muted">No tracking history available</div>';
          }
        }
      } else {
        // For error cases, we can replace the content but save it first
        window.originalTrackingResultHTML = rightSideTrackingResult.innerHTML;
        rightSideTrackingResult.innerHTML = `
          <div class="alert alert-warning">
            ${response.data.message || 'No tracking information found'}
          </div>
        `;
      }
    } catch (error) {
      console.error('Tracking error:', error);
      
      // Save the original HTML before showing error
      window.originalTrackingResultHTML = rightSideTrackingResult.innerHTML;
      
      // More detailed error handling
      let errorMessage;
      
      if (error.response) {
        // The request was made and the server responded with a status code
        // that falls out of the range of 2xx
        console.log('Error response data:', error.response.data);
        console.log('Error response status:', error.response.status);
        
        if (error.response.data && error.response.data.message) {
          errorMessage = `
            <div class="alert alert-warning">
              ${error.response.data.message}
            </div>
          `;
        } else if (error.response.status === 404) {
          errorMessage = `
            <div class="alert alert-warning">
              Tracking information not found. Please check the tracking number and try again.
            </div>
          `;
        } else {
          errorMessage = `
            <div class="alert alert-danger">
              Error code: ${error.response.status}. Please try again later.
            </div>
          `;
        }
      } else if (error.request) {
        // The request was made but no response was received
        errorMessage = `
          <div class="alert alert-danger">
            No response from server. Please check your internet connection and try again.
          </div>
        `;
      } else {
        // Something happened in setting up the request that triggered an Error
        errorMessage = `
          <div class="alert alert-danger">
            ${error.message || 'An unexpected error occurred. Please try again.'}
          </div>
        `;
      }
      
      rightSideTrackingResult.classList.remove('d-none');
      rightSideTrackingResult.innerHTML = errorMessage;
    } finally {
      trackButton.disabled = false;
      trackButton.innerHTML = 'Track';
    }
  };
  
  /// Event listeners
  trackButton.addEventListener('click', async function() {
    const trackingNumber = trackingInput.value.trim();
    // Restore original structure before tracking
    restoreOriginalStructure();
    await trackShipment(trackingNumber);
    
    if (window.innerWidth < 768) {
      setTimeout(() => {
        const rightSide = document.querySelector('.auth-bg');
        if (rightSide) {
          rightSide.scrollIntoView({ behavior: 'smooth' });
        }
      }, 100);
    }
  });
  
  trackingInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      e.preventDefault();
      const trackingNumber = trackingInput.value.trim();
      // Restore original structure before tracking
      restoreOriginalStructure();
      trackShipment(trackingNumber);
      
      if (window.innerWidth < 768) {
        setTimeout(() => {
          const rightSide = document.querySelector('.auth-bg');
          if (rightSide) {
            rightSide.scrollIntoView({ behavior: 'smooth' });
          }
        }, 100);
      }
    }
  });
});
  //  Add this new function to get the appropriate icon for each status
const getStatusIcon = (status) => {
  const statusLower = status.toLowerCase();
  console.log("status what is ",statusLower);
  
  if (statusLower.includes('delivered') || statusLower.includes('completed')) {
    return '<i class="fas fa-check-circle"></i>';
  } else if (statusLower.includes('transit') || statusLower.includes('moving')) {
    return '<i class="fas fa-truck"></i>';
  } else if (statusLower.includes('out for delivery')) {
    return '<i class="fas fa-truck-loading"></i>';
  } else if (statusLower.includes('shipped') || statusLower.includes('picked') || statusLower.includes('pickup')) {
    return '<i class="fas fa-shipping-fast"></i>';
  } else if (statusLower.includes('pending') || statusLower.includes('manifested') || statusLower.includes('created') || statusLower.includes('data received')) {
    return '<i class="fas fa-download"></i>';
  } else if (statusLower.includes('failed') || statusLower.includes('exception')) {
    return '<i class="fas fa-exclamation-triangle"></i>';
  } else if (statusLower.includes('return')) {
    return '<i class="fas fa-undo"></i>';
  } else if (statusLower.includes('hold') || statusLower.includes('waiting')) {
    return '<i class="fas fa-pause-circle"></i>';
  } else if (statusLower.includes('processing')) {
    return '<i class="fas fa-cog"></i>';
  } else if (statusLower.includes('arrived') || statusLower.includes('reached')) {
    return '<i class="fas fa-warehouse"></i>';
  } else if (statusLower.includes('dispatched')) {
    return '<i class="fas fa-box"></i>';  
  } else {
    console.log("Unknown status: ", status);
    return '<i class="fas fa-circle"></i>';
  }
};
</script>
                        <!-- External JS -->
                        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                        <!-- FOOTER -->
                        <%- include('../../partials/footer') %>
                    </div>

    </div>


    <script src="/js/main.js"></script>
</body>

</html>